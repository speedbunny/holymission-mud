[blade          ] [Jan  4] [sets or linked lists                         ]

Ok, is there a data structure for sets or linked lists?

What I want to do is this.
I want an object to be able to maintain a list
of strings that can be added to or subtracted
from, without any limit.

This rules out arrays.  

Any help would be greatly appreciated.

Blade
[margusko       ] [Jan  4] [Re: sets or linked lists                     ]

why does it rule out arrays? arrays can hold up to ~10000 elements,
how much do YOU want to hold?
M
[blade          ] [Jan  5] [re: sets or linked lists                     ]

Ok, I COULD make an array of 10000 elements, but
thats EXTRORDINARILY bad programming practice.

Not to mention a disgusting waste of memory.

I like tomake robust, bug free code.  Puting an
arbitary limit to your code is bad programming practice.

There must be a way to do it.

Blade
[mangla         ] [Jan  6] [re: sets or linked lists                     ]

Ever thought of using mappings?

-Mangla
[margusko       ] [Jan  7] [Re: re: sets or linked lists                 ]

Ok, for a 'list' you can do something like this:

#define L_ELEM 0
#define L_NEXT 1

mixed * linked_list;
linked_list = allocate(2);
linked_list[L_ELEM] = element;
linked_list[L_NEXT] = (mixed *) next_chain_of_list;

But as you see, the above list uses element_num * 24 bytes of mem.
BUT EACH 24 OF THE 24 BYTES ARE ALLOCATED __SEPARATELY__,

and - ad a main trait of the lists - you always add, and
delete elements. That means you will have a VERY fragmented memory,
like having 24-byte holes inside. Thats not a joke, cos nearly all
other types and objects need more than 24 bytes of mem. If you would
look at the internal of a driver, you would see, that it has
lotsa lotsa BETTER memory management like any other operating systems
(thats a fact: imagine, since your linux box runs ~100 processes,
the driver handles up to many THOUSANDS of objects! type: status).

Mapping is a really bad realization of lists/sets. Its not
designed for that. Maybe you can use classes: (these are similar to
the arrays)

class DoubleLinkedList {
    mixed element;
    class DoubleLinkedList previous_in_list, next_in_list;
}

or something  like that ... but since no classes are supported
in amylaar driver .. it sux.


Blade: believe me: the driver makes it 1000 times better as you would
ever code it. Alas, the BEST way ever is to code it in
an object. Hmm .. i found one in my lib. I copy it over to my
dir. adt_defs.h and ilist.c - tho i still say NOONE uses it, and
if you want to make bug-free code, then thats not where you should
start.
[blade          ] [Jan 10] [linked lists                                 ]

Ok, what I want to do is this:
Store a variable number of names.  Or pointers
to objects.

What would be the best way to do this?
Could mappings handle this? (arg, I might
have to figure out what mappings are :)

Blade
[margusko       ] [Jan 10] [Re: linked lists                             ]

To store strings: (names)
string * Names;
Names = allocate(How_Many_Names_You_Wanna_Store);
and:
Names[i] = "...";

Or similary objects:
(the variable type 'object' is not really 'object', but a pointer to one)
object * Objects;
Object = allocate(Num_Of_Objects);
s/Object/Objects/
Objects[i] = (object)What_The_Hell;

If you want to change the size of these arrays, then u can use:
Names += allocate(Size_Of_Change); // When you want to enlarge
Names = Names[0..(New_Size-1)] // when you want to deflate.

BTW: If you dont know about mappings, please go back to
Appr lvl, and read the docs.

M
[blade          ] [Jan 11] [re: marg                                     ]

Thanks for the info, thats exactly what i was
looking for.

Heh, about the mappings, Ive never had to use them
before, so I never bothered to learn them.
If every wiz who didnt know what mappings were had
to go back to appr there would be very few wizzes
left :)

Well, I was just told that I know what mappings are, 
I just dont recognize them as such.  Well whatever :)

Blade
[margusko       ] [Jan 12] [Re: re: marg                                 ]

Hehehe, i have a more complicated test system:
New wizards ( = apprs ) must learn law and some basic LPC, etc
higher level wizards must apply themselves for elders, and
must make a mid level security, balance, law, and high level LPC
exam.
and finally there is an exam for arches too:
A complete plan of ideas, and 'what to do' for the position
the wiz is applying for.
(balance, driver, lib, quality, mentor-librarian, or service)
eg: the 'service' arch must plan for example a httpd, and 
write it in LPC.

Hmm, that means you could make the 1st test without
mappings, but NEVER would make even the elder position.

Thats because mapping is the most POWERFUL data type,
you can easily handle them, and build up very complicated
data types. 

Oh well .. better read about it.


M
[blade          ] [Jan 12] [re: marg                                     ]

Well, I know what I use.  Ive never had to use
some stuff, so I am not familiar with them.

Better to use what you know alot then to know alot
but use little.

Blade
[uglymouth      ] [Jun 26] [clone_list and ::reset(arg);                 ]

At several times I encountered some files that do not use
replace_program, but still have ::reset( arg ); placed at the
end of the reset() function. Basically this is not good coding,
although it will rarely lead to bugs. As things work now, the
point is that it is possible to use clone_list without using
replace_program. If you want your clone_list monsters to reappear
at reset, you will have to put both the clone_list and ::reset( arg );
statements up in the reset() function before if( arg ) return;
If you don't, the clone_list creation code in room/room will not be
executed for your room at reset time.

Right now it's only with clone_list that a bug may occur, but since
noone knows what future things may be implemented in the reset()
function of /room/room.c, it is good practice to put ::reset( arg );
at the beginning of your reset() function before if( arg ) return;.

Note that when you do use replace_program in that room, ::reset( arg );
should indeed be at the last line before the one containing the
replace_program statement.

Best wishes,

Viking Lord Uglymouth
[margusko       ] [Oct 17] [clean_up                                     ]

memory status:
Sentences:                         37655   753100
Objects:                            3425  1250248
Arrays:                             9365   765784
Mappings:                            299   103720
Prog blocks:                         666  1504928 (869 swapped, 689 Kbytes)
Memory reserved:                                0
hash table overhead                          4096
Strings malloced                   28860   982060 + 189544 overhead
call out:                             60     1920 (current length 8)
                                         --------
Total:                                    5118908

this with 2 players.
notice line 'objects' : >3000 objects are loaded.

I think there is something wrong with the clean_up routines ...

M
[redsexy        ] [Nov 24] [Help for the total newbie wiz!               ]

Hi, as most of you know I didn't have a clue about coding when I was
becoming a newwiz, and I spent a lot of time trailing through various
directories of documentation and examples in an attempt to not only be
able to code stuff, but to actually understand the stuff I was coding.

I have now found the ultimate guide for total newbie new wizzes.

/players/silas/lpcguide 

Contains a lot of basic stuff on commands you will use, and explains
a lot of the nasty code very nicely.

Well worth looking at :)

Redsexy
[cashimor       ] [Apr 18] [/obj/door.c                                  ]

Someone added a log_file entry in the door, at the set_doors() function
as far as I can see, but unfortunately they used the filename() 
function rather than the file_name() function (the first doesn't
exist). Can an arch please fix this, or tell me by which file door.c
has been replaced if it should not be used? My castle depends a bit on
this file.

Greetings,
Ethereal Cashimor
[bobo           ] [Jan 25] [um                                           ]

Why do we have a little prtugese cherubin board?
[tatsuo         ] [Mar  9] [Turbo                                        ]


Turbo and some other wizzes had question about
the wc of a monster if its wielding a weapon.
Mangla's answer was wrong.
The WC of the weapon is added to the natural wc.
It doesn't replace it.

Tatsuo
[mangla         ] [Mar  9] [Re: Turbo                                    ]

Actually we are both incorrect. After reviewing the code, it
does not superced the natural WC with the weapon WC.
It actually uses a hybrid of the natural WC and stats. Pretty
stupid system from what I see. Will ahve to look again and
see if I can make sense of the intent.

-Mangla
[wilbie         ] [Mar  9] [Re: Turbo                                    ]

Reasoning might be this:

You have a monster with a really nice weapon.  You don't want the monster
to be helpless if disarmed (or if you don't always have it clone the
really nice weapon) but you also don't want it to hit TOO hard by
combining natural wc with the weapon wc.

However, it would make more sense to me to determine the wc with a weapon
by using the WEAPON wc and the stats, rather than the natural wc and
the stats.

One general rule should be that no monster should hit harder without its
weapon than it does with it's weapon.  (Why would it ever want a weapon?)
[turbo          ] [Mar  9] [why?                                         ]

To discourage people from using disarm.  Some plaeyrs 
instinctively disarm their foe if they are using a weapon.
This makes them think twice.
Tricky, perhaps cruel, but true!
[sargon         ] [Mar  9] [Re: why?                                     ]

If you're going to be tricky then just don't have a weapon
in the inventory of the mob...takes away the prize.
Btw, is this a wiz only board?  Where am i?
Oh, i know...hehe
[wilbie         ] [Mar  9] [well                                         ]

If you have a very large monster, you want it to still be able to put
up a fight if it's disarmed.  Disarm should help a player, not guarantee
a victory.
[mangla         ] [Mar  9] [natural WC                                   ]

the method I think should be used would be:
Use the WC of a wielded weapon.
No weapon wielded, then use the monster WC.

Now this owuld work, becuase the wizard can set the WC of
the monster manually. Does this sound like an acceptable
solution? Right now the formula is convulted in about
3 seperate places.

-Mangla
[tatsuo         ] [Mar 10] [no                                           ]


I would fancy that the wc of a weapon be added to the natural wc.
Players disarming successfully will reduce damage taken to the
(them)

Maximum wc of a monster can be set at 80.
adding a wc 20 sword would make it 100, which will WAIL on a player.
Ryu comes close to this with a natural 90, and no weapon
But ryu is supposed to be the BADASS of the mud.

Even with this, i watched a mid level legend ninja handle him
with relative ease. SO i uped him a bit.

Note, that ninja disarm will not allow swords greater than wc 15 to be disarmed
so no easy prizes.
disarm is wc < TPL/2
break is wc < TPL-15

Either way, no free wc 16+
The guilds need balanced out.  The monsters are not a challenge
It took me 6 hours to kill Ryu alone. and 3 with Haplo for the second Katana.
The katana should be a prize for a high level ninja, not a cakewalk.


Anyway.  limiting it to weapon wielded means great monsters, holding great
swords and never wielding them.  STUPID

Tatsuo
[bobo           ] [Mar 10] [wc                                           ]

Another solution could be to have whatever the higher of the two AC
er WC be used, that way the more powerful monsters who have higher 
WC's wouldn't be penalized, however the lowerlevel monsters might
benefit.  Though I do like the idea of the weapon being added to 
natural WC.  If not all the way maybe half the WC rounded up added
to natural WC.
[sargon         ] [Mar 10] [re penalizing monsters?                      ]

I like the idea of a max wc for monsters and adding the wc so that you benifit
from disarm.  How disarm is accomplished being
a guild decision i suppose.
