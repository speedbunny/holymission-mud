/* 

    This is an advancement-file for the dynion - tool
    it has to be here in the /obj - dir for the file access

*/
#define TP	this_player()
#define TPN	TP->query_name()
#define TPRN    TP->query_real_name()

string got;
static object globals;
static string txt1;
static string txt2;

reset(arg) {
   if(!arg) {
      globals=allocate(50);
      txt1=
"#include \"/tools/efun_defines.h\"\n"+
"#define G(x) globals[x]\n\n"+
"object mark,spare,last,res;\n"+
"query_me() { return this_object(); }\n\n"+
"efunction(globals,yx001,yx002,yx003) {\n"+
"  mark=yx001;\n"+
"  spare=yx002;\n"+
"  last=yx003;\n\n"+
"  call_out(\"dest_me\",2);\n\n";
      txt2="\n\n"+
"  return res;\n"+
"}\n\n"+
"dest_me() {\n"+
"  destruct(this_object());\n"+
"}\n";
   }
}

set_got(arg) { got=arg; }

query_got() { return got; }

write_got() { save_object("players/"+TPRN+"/dynion_tmp"); }

rm_got() { rm("/players/"+TPRN+"/dynion_tmp.o"); }
 
call_efun(txt,m,s,l) {
object ef;
string fname,err_msg;
object res;

   fname="/players/"+this_player()->query_real_name()+"/dynion_efun.c";
   if(file_size(fname)>=0) rm(fname);
   write_file(fname,txt1+txt+txt2);
   if(err_msg=catch(ef=fname->query_me()))
   {
       write("Error on loading object ("+fname+")\n");
       write(err_msg);
       rm(fname);
   }
   else
   {
       rm(fname);
       if(err_msg=catch(res=ef->efunction(globals,m,s,l)))
       {
           write("Error on calling the efun!\n");
           write(err_msg);
       }
       else got=res;
       destruct(ef);
   }
   return got;
}
