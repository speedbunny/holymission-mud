#define TPN this_player()->query_name()
inherit "room/room";

int passage;

int move(string str) {
  if(!str)
    str=query_verb();
  switch(str) {
    case "down" :
      if(!passage) {
        notify_fail("You can't go down here!\n");
        return 0;
      }
      if(this_player()->query_real_name()!=passage) {
        write("The passage wasn't made by you, you don't fit into it!\n");
        return 1;
      }
      this_player()->move_player("down#players/emerald/good/light/light24");
       return 1;
  }
  return ::move(str);
}
void reset(int arg) {

passage=0;

  if(arg) return;

  set_light(1);

  short_desc="Cliff";
  long_desc="You have come to the base of a cliff rising out of the forest " +
            "floor. The cliff is extremely steep and it looks to be " +
            "impassable. At the base of the cliff, the dirt looks quite " +
            "soft@@extralong@@.\n";

  items=({"cliff","The cliff is very steep and looks frightening",
          "dirt","The dirt looks as if someone was digging in it",
          "floor","The forest and its shrubby vegetation",
          "base","The dirt is very soft here",
        });

  dest_dir=({"players/emerald/good/light/light22","east"
           });

  smell="The smell of freshly dug earth hangs in the air.";

  ::reset();

}


extralong() {
  if(!passage) return "";
  return ".  There is a passage leading down here";
}

void init() {
  ::init();
  add_action("_dig","dig");
}


_dig(str) {
object pickaxe;

  switch(str) {
    case "cliff" :
    case "at cliff base" :
    case "at base" :
    case "dirt" :
    case "under cliff" :
      pickaxe = present("pickaxe",this_player());
      if(!pickaxe || !pickaxe->query_is_clean()) {
        write("You've got nothing to dig with!\n");
        return 1;
      }
      if(passage) {
        if(passage==this_player()->query_real_name()) {
          write("Why? There is already a passage there!\n");
          return 1;
      }
      write("You modify the passage leading down to fit someone like you.\n");
      say(TPN+" modifies the passage leading down.\n");
      passage=this_player()->query_name();
      return 1;
      }
      if(random(100)<35) {
        write("You dig at the base of the cliff with the axe and find a " +
              "passage leading down.\n");
        say(TPN+" digs out a hidden path leading down with the axe.\n");
        passage=this_player()->query_real_name();
        return 1;
      }
      write("You dig, but find nothing.\n");
      say(TPN + " digs in the dirt for fun and amusement.\n");
      return 1;
    default :
      notify_fail("Dig where?\n");
      return 0;
    }
}

