inherit "room/room";
/* Coded by: Brainsprain@holymission                                    */
/* This room is a generic object used to create an inn.  It heals at a  */
/* rate of 1 hit point per every 7 - con/4 at a cost of cha/4 * hit     */
/* points needed to max out.                                            */

/*Normal healing occurs one hp per every 10 heartbeats. */

int rate;              /* Rate at which hp is recovered */ 
int cost;              /* Cost to recover all lost hp   */
int cost_mod;          /* number of hit_points recovered */
int pre;               /* Beginning hit points          */
static status resting; /* Is player resting             */
string full_heal;      /* String to be said if healing is not necessary */
string rest_msg;       /* Message player recieves when resting begins */
string stand_msg;      /* message player recieves when standing up */
string owner;          /* This is the name off the inn keeper */

/* sets the full_heal message */

void bleck(){
move_object(this_player(), "players/brainsprain/workroom.c");
return;
}
void heal_me(){
remove_call_out("heal_me");
write("line 3\n");

this_player()->reduce_hit_points(-1);
}
void set_full_heal(string arg){
full_heal = arg;
}

/* Sets the rate at which hit points are recovered */
void set_rate(){
int temp;
int preint;
preint = this_player()->query_con();
#if 0
temp = to_int(preint/4);
#else
temp = preint/4;
#endif
if(temp == 0) {
  temp = 1;
}
rate = 7 - temp;
}

/* Returns the rate of hit point recovery */
int query_rate(){
return rate;
}

/* Sets the cost to recover all lost hit points */
void set_cost(int cst){
int temp1;
int temp2;

#if 0
temp1 = to_int(this_player()->query_cha()/4);
#else
temp1 = this_player()->query_cha()/4;
#endif
if(temp1 == 0){
 temp1 = 1;
}
if(cst < 0) {
cst = 0;
}
cost = temp1 * cst;
cost_mod = cst;
}

/* Returns the cost to recover all lost hit points */
int query_cost(){
return cost;
}

void _stand(){
resting = 0;
write(stand_msg+"\n");
if(this_player()->query_hp() == this_player()->query_max_hp()){
set_cost(this_player()->query_max_hp() - pre);
}
else {
set_cost(this_player()->query_hp() - pre);
}
call_other(this_player(), "add_money", - cost);
write(capitalize(owner)+" says: That will be "+cost+" coins.\n");
return;
}
/* Starts the player resting */
int _rest(){
pre = this_player()->query_hp();
set_rate();
set_cost(this_player()->query_max_hp() - pre);
if(query_cost() == 0){
write(full_heal+"\n");
return 1;
}
if (call_other(this_player(), "query_money", 0) < cost) {
   write("That costs " + cost + " gold coins, which you do not have.\n");
    return 1;
    }
resting = 1;
write(rest_msg+"\n");
while(resting = 1){
if(this_player()->query_max_hp() > this_player()->query_hp()){
write("line 2\n");
call_out("heal_me",rate);
}
else {
this_player()->reduce_hit_points(- (this_player()->query_max_hp() - pre));
write("this line\n");
_stand();
return 1;
}
}
}



void set_rest_msg(string str){
rest_msg = str;
}

void set_stand_msg(string str){
stand_msg = str;
}

void set_owner(string str){
owner = str;
}


reset(arg){
if(arg) return;
  set_light(1);
  short_desc = "An inn";
  long_desc = "An inn\n";
  set_full_heal("You are not in need of healing.");
  set_rate(1);
  set_cost(1);
  set_rest_msg("You lay down and begin to rest.");
  set_stand_msg("You stand up.");
  set_owner("brainsprain");
  property=({"no_fight"});
}

void init(){
   ::init();
   if(resting){
   add_action("bleck","home");
   add_action("cmd_hook","",1);
}
   add_action("_rest","rest");
   add_action("_rest","sleep");
   add_action("_stand","stand");
   add_action("_stand","wake");
}
