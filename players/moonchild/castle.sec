#define ROOMS ({ "gcent", "alley1", "alley2", "shop", "waste", "pub",\
	"wroad1", "wroad2", "wroad3", "inn", "dpath", "pit", "bystat",\
	"eroad1", "eroad2", "river", "building" })

object *gnome;
object *m;
string *files;
mixed *quests;

void prepare_disp();

status id(string str) {
  return str=="ball" || str=="crystal ball";
}

string short() {
  return "A glowing crystal ball";
}

void long() {
  write("A crystal ball with a glowing magic field around it.\n"
	+ "It looks like it might be a good idea to rub it.\n");
}

void init() {
  add_action("rub", "rub");
}

status rub(string str) {
  if(!id(str)) {
    notify_fail("Rub what?\n");
    return 0;
  }
  say((string)this_player()->query_name() + " rubs the crystal ball.\n");
  write("You rub the crystal ball.\n");
  if(present("remote soul", this_player())) {
    write("A voice tells you: Type \"help remote soul\" for help.\n");
    return 1;
  }
  move_object(clone_object("players/moonchild/misc/rsoul"), this_player());
  write("You now have a remote soul!\n"
	+ "It will stay with you even after you log out.\n"
	+ "Type \"help remote soul\" for help with it.\n");
  return 1;
}

status get() {
  write("You don't seem to be able to pick it up. Strange....\n");
  say((string)this_player()->query_name()
	+ " tries to pick up the crystal ball, but seems unable to.\n");
  return 0;
}

void reset(int arg) {
  int i,j;
  if(!arg) {
    gnome=allocate(3);
    files=({ "plants/sparrow", "room/vill_track",
	"misc/pigeon", "room/plane2",
	"misc/singer", "room/pub2",
	"haunter/gnome", "room/south/sislnd1",
	"haunter/gnome", "room/south/sislnd5",
	"haunter/gnome", "room/south/sislnd10",
	"deep_forest/drac_leader", "players/moonchild/deep_forest/f6-4",
	"deep_forest/drac_leader", "players/moonchild/deep_forest/f5-6",
	"deep_forest/drac_leader", "players/moonchild/deep_forest/f7-1" });
    j=sizeof(files);
    m=allocate(j);
    quests=({
	({ "troll_slayer", "Slay the Evil Troll King",
	"Long ago the legendary King of Edradour slayed many a troll with the longsword\n"
	+ "Trollslayer. Since then the sword has passed away into the memories of those\n"
	+ "who remember such days, and no-one knows where it is. Many mortals have tried\n"
	+ "to find the great sword, without success. Others have tried to make copies of\n"
	+ "it, but they have never had the power of the original. Your task is to find\n"
	+ "the genuine sword, and use it to destroy the evil troll king who is tyrannising\n"
	+ "villages for miles around.\n", 20, 6 }),
	({ "moonchild_puzzle", "Free King Dmitri",
	"The Kingdom is in danger. The Good King Dmitri has been kidnapped by one of his\n"
	+ "wizards, who has usurped power. Rumour has it that the King is held magically\n"
	+ "inside the Mountains of Madness by a strange mystical force, which can only\n"
	+ "be broken by the most intelligent of adventurers. If you were to break this\n"
	+ "force, and free the king, you would be honoured as a true hero forever.\n",
	25, 4 }),
	({ "goblin_quest", "Prove your friendship to the old hermit",
	"An old hermit has been driven out of his shack in the forest by a group\n" +
        "of evil yellow goblins that have taken up residence here. Find the hermit\n" +
        "and prove to him that you have been killing the horrible creatures, and he\n" +
        "may reward you.\n\n" +
	"Hint: this is a mid-to-high level hack'n'slash quest.\n", 18, 8 }),
	({ "haunter", "Destroy the Haunter of the Dark",
	"Deep in the bowels of the earth, the evil monster known as the Haunter\n"
	+ "of the Dark gathers strength for an attack on the whole of our known world.\n"
	+ "Prevent him from doing so by utterly destroying him.\n", 70, 5 }),
	({ "gnome_treasure", "Raid the Gnome King's Treasury",
	"Raourort, the enterprising Gnome King, has lots of very valuable items,\n"
	+ "and even more money in his treasury, but with his money he has bought\n"
	+ "some very nasty guards and some rather incomprehensible methods of\n"
	+ "guarding the entrance. Rob the treasury, and you will be a hero for sure!\n", 60, 8 })
	});
  }
  "players/moonchild/goblins/disp"->make();
  call_other("players/moonchild/wedding/replace_it","????");
  call_other("players/moonchild/misc/beatrice","????");
/*  call_other("players/moonchild/cctv/master", "????"); */
  for(i=0;i<j;i+=2) if(!m[i/2])
	move_object(m[i/2]=clone_object("players/moonchild/"
	+ files[i]), files[i+1]);
  prepare_disp();
}

void prepare_disp() {
  call_out("make_gnomes",60,0);
}

void make_gnomes() {
  int i;
  for(i=0;i<3;i++)
    if(!gnome[i])
      move_object(gnome[i]=clone_object("players/moonchild/gnome/gnome"),
	"players/moonchild/gnome/" + ROOMS[random(sizeof(ROOMS))]);
}

void make_quest() {
  object q;
  int i;
  move_object(this_object(), "room/quest_room");
  for(i=0;i<sizeof(quests);i++) {
    if(!present(quests[i][0]), environment()) {
      q=clone_object("obj/quest_obj");
      q->set_id("quest");
      q->set_name(quests[i][0]);
      q->set_short_hint(quests[i][1]);
      q->set_hint(quests[i][2]);
      q->set_weight(quests[i][3]);
      q->set_killing(quests[i][4]);
      q->add_quest();
    }
  }
  move_object(this_object(), "players/moonchild/workroom");
}
