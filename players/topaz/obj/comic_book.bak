int current_page;

reset()
{
    current_page = 0;
}

short() { return "a book on a chain"; }

long(str) {
    if (str == "chain") {
	write("The chain is secured to the desk.\n");
	return;
    }
   if(current_page==0) {
     write("The book is resting on the desk.\n");
     write("The title is: 'Player RULES' .\n");
     return 1;
   }
   else {
     write("The Book has these Sections: \n"
          +" 1) Player Killing  \n"
              +" 2) Wiz Interferences\n"
              +" 3) Multiple Characters  \n"
              +" 4) Passwords   \n"
              +" 5) Quest Information  \n"
            +" 6) Divorces   \n"
             +" 7) Reboots   \n"
            +" 8) Purge  \n"
               );
     write("You can turn page <num> and read book.\n");
     write("You are on page "+current_page+".\n");
     return 1;
   }
}

init() {
    add_action("open", "open");
    add_action("close", "close");
    add_action("read_book", "read");
    add_action("turn_page","turn");
}

id(str) { return str == "book" || str == "chain"; }

open(str) {
    if (!id(str))
       return 0;
    if (current_page > 0) {
	write("The book is already open at page " + current_page + ".\n");
	return 1;
    }
    current_page = 1;
    write("Ok.\n");
   write("These are the Sections:\n"
        +" 1) Player Killing \n"
       +" 2) Wiz Interferences  \n"
       +" 3) Multiple Characters  \n"
       +" 4) Passwords    \n"
       +" 5) Quest Information   \n"
       +" 6) Divorces   \n"
        +" 7) Reboots   \n"
       +" 8) Purge   \n"
        );
   write("\nYou can turn page <num> and read book.\n");
    say(call_other(this_player(), "query_name", 0) +
	" opens the book.\n");
    return 1;
}

close(str)
{
    if (!id(str))
	return 0;
    if (current_page == 0) {
	write("It is already closed.\n");
	return 1;
    }
    current_page = 0;
    write("Ok.\n");
    say(call_other(this_player(), "query_name", 0) +
	" closed the book.\n");
    return 1;
}

read_book(str)
{
  if(!id(str))
    return 0;
  if(current_page==0) {
    write("The book is closed.\n");
    return 1;
  }
  if(current_page==1) {
    command("help playerkilling",this_player());
    say(this_player()->query_name()+" reads page "+current_page+".\n");
    return 1;
  }
  if(current_page==2) {
    cat("/players/acdc/office/player_rule2");
    say(this_player()->query_name()+" reads page "+current_page+".\n");
    return 1;
}
  if(current_page==3) {
    cat("/players/acdc/office/player_rule3");
    say(this_player()->query_name()+" reads page "+current_page+".\n");
    return 1;
  }
  if(current_page==4) {
    cat("/players/acdc/office/player_rule4");
    say(this_player()->query_name()+" reads page "+current_page+".\n");
    return 1;
  }
  if(current_page==5) {
    cat("/players/acdc/office/player_rule5");
    say(this_player()->query_name()+" reads page "+current_page+".\n");
    return 1;
  }
  if(current_page==6) {
    cat("/players/acdc/office/player_rule6");
    say(this_player()->query_name()+" reads page "+current_page+".\n");
    return 1;
  }
  if(current_page==7) {
    cat("/players/acdc/office/player_rule7");
    say(this_player()->query_name()+" reads page "+current_page+".\n");
    return 1;
  }
  if(current_page==8) {
    cat("/players/acdc/office/player_rule8");
    say(this_player()->query_name()+" reads page "+current_page+".\n");
    return 1;
  }
}


turn_page(arg) {
  if(arg=="page") {
  if(current_page==0) {
   write("You might want to open the book first.\n");
    return 1;
  }
    if(current_page<=7 && current_page>0) {
      current_page++;
      say(this_player()->query_name()+" turns a page in the book.\n");
      write("You turn to page "+current_page+".\n");
      return 1;
     }
     else {
       write("That page does not exist.\n");
       return 1;
     }
  }
  else if(!arg) {
     write("You must turn PAGE <num>.\n");
     return 1;
  }
  else {
    switch(arg) {
      case "page 1" : current_page=1;
                      say(this_player()->query_name()+" turns page.\n");
                      write("You turn to page "+current_page+".\n");
                      return 1;
              break;
     case "page 2" : current_page=2;
                        say(this_player()->query_name()+" turns page.\n");
                        write("You turn to page "+current_page+".\n");
                        return 1;
                        break;
     case "page 3" : current_page=3;
                        say(this_player()->query_name()+" turns page.\n");
                        write("You turn to page "+current_page+".\n");
                        return 1;
              break;
     case "page 4" : current_page=4;
                        say(this_player()->query_name()+" turns page.\n");
                        write("You turn to page "+current_page+".\n");
                        return 1;
              break;
     case "page 5" : current_page=5;
                        say(this_player()->query_name()+" turns page.\n");
                        write("You turn to page "+current_page+".\n");
                        return 1;
              break;
     case "page 6" : current_page=6;
                        say(this_player()->query_name()+" turns page.\n");
                        write("You turn to page "+current_page+".\n");
                        return 1;
                       break;
     case "page 7" : current_page=7;
                        say(this_player()->query_name()+" turns page.\n");
                        write("You turn to page "+current_page+".\n");
                        return 1;
              break;
     case "page 8" : current_page=8;
                        say(this_player()->query_name()+" turns page.\n");
                        write("You turn to page "+current_page+".\n");
                        return 1;
              break;
      default: write("Not that many pages!\n");
                 return 1;
    }
  }
}

get(str) {
    if (str == "book") {
	write("The book is attached to a chain.\n");
	return 0;
    }
    if (str == "chain") {
	write("The chain is secured to the desk.\n");
	return 0;
    }
    return 0;
}
