inherit "obj/treasure";
#include "bard.h"

int page, gd;
string *notes;

status set_page( string str );
status read( string str );
status write_line( string str );
status clear_note( string str );

void reset( int arg ) {
    if( !arg ) {
	set_id( "notebook" );
	set_short( "A notebook" );
	set_long( "The notebook of the Harpers.  It has 30 pages.\n" );
	set_read( "This is the notebook of the Harpers.\n\
Please return it to Taliesin if you find it.\n\
Possible commands are:\n\
write <line>\n\
read page <page#>\n\
clear\n\
setpage <page#>\n" );
	set_info( "This object will be saved after writing it." );
	set_weight( 1 );
	set_value( 0 );
	if( !restore_object( "/players/turbo/guild/log/notebook" ) ) {
	    page = 1;
	    notes = allocate( 30 );
	    gd = "players/turbo/guild/room"->query_guild();
	}
    }
}

void init() {
    ::init();
    add_action( "set_page", "setpage" );
    add_action( "write_line", "write" );
    add_action( "clear_note", "clear" );
}

status set_page( string str ) {
    int num;

    if( sscanf( str, "%d", num ) !=1 ) 
       return ( 0 );
    if( ( num < 1 ) || ( num > 30 ) ) {
	write( "Please set a page between 1 and 30.\n" );
	return ( 1 );
    }
    page = num;
    printf( "Ok, page set to %d.\n", num );
    return ( 1 );
}

status read( string str ) {
    string *wat;

    if( !str ) 
       return ( 0 );
    wat = explode( str, " " );
    if( wat[0] != "page" ) 
       return ( ::read( str ) );
    if( !present( this_object(), this_player() ) ) 
       return ( 0 );
    if( sizeof( wat ) == 2 ) {
	if( sscanf( wat[1], "%d", page ) != 1 ) 
       return ( 0 );
	if( ( page < 1 )||( page > 30 ) ) 
       return ( 0 );
    }
    say( this_player()->query_name() + " reads a page of a notebook.\n" );
    if( !notes[page - 1] ) {
	write( "The page is empty.\n" );
	return ( 1 );
    }
    if( this_player()->query_guild() != gd && !this_player()->query_immortal() ) {
	write( "You cannot read the Harper Runes!\n" );
	return ( 1 );
    }
    write( notes[page - 1] );
    return ( 1 );
}

status write_line( string str ) {
    if( !str ) 
       return ( 0 );
    if( !present( this_object(), this_player() ) ) 
       return ( 0 );
    if( this_player()->query_guild() != gd ) {
	write( "You have no way to write in the book!\n" );
	return ( 1 );
    }
    say( this_player()->query_name() + " writes something in a notebook.\n" );
    write( "Ok." );
    if( !notes[page - 1] ) {
	notes[page - 1] = str + "\n";
	save_object( "/players/turbo/guild/log/notebook" ); 
	return ( 1 );
    }
    notes[page - 1] += ( str + "\n" );
    save_object( "/players/turbo/guild/log/notebook" );
    return ( 1 );
}

status clear_note( string str ) {
    if( str ) 
       return ( 0 );
    if( !present( this_object(), this_player() ) ) 
       return ( 0 );
    if( this_player()->query_guild() != gd ) {
	write( "You have no way to erase the book!\n" );
	return ( 0 );
    }
    notes [page - 1] = 0;
    save_object( "/players/turbo/guild/log/notebook" );
    return ( 1 );
}
