INTRODUCTION

Since I'm working on the Bard's guild, a specific 
inheritance for a musical intrument was appreciated. So I 
made one. At this moment it's in 
/players/cashimor/inherit/music.c and it features a lot of 
interesting commands. In this file I'll describe all the 
possibilities of this thing.

VERSION 2.1

This version misses the QUERY_ALL_SND and SET_ALL_SND 
commands, but includes the fact that the function MUSIC_DONE
in the environment of this_player() is called with the 
object on which was played as parameter. This can be used 
for opening waterfalls ect. Of course, you could also use 
catch_tell for this, which is more realistic. On version 
2.1: set_cpag added. Very interesting command. Better Bard 
Check, better hide and search (not much interference with 
the thieves guild anymore).

VERSION 2.2

SET_CREATOR and QUERY_CREATOR added. The QUERY_CREATOR will
also be accessed by the Guild of Bards in all other objects,
and if you want your spellbook to be made by someone else
than yourself, you can define the QUERY_CREATOR function in
your object.

SET COMMANDS

set_can_get(boolean)

This command sets if you can get the item. Default it's one
(that means: you can take it). You must take the instrument 
to play it if you can get it, otherwise you can play it 
while you haven't taken it (of course). The untakable 
version is for example for very large horns ect.

set_weight(integer)

This command sets the weight. Default it's set to one.

set_value(integer)

This command sets the value of the item, that is, the money
you get from it in the shop. The default value is 50.

set_name(string)

This command sets the name, id, and short of the item. 
Default it's 'instrument'. You can change it to any name 
you like (of course).

set_2nd_com(string)

This command makes a second command for the item. Normal an 
instrument can be played, but if you have set this command 
you can also 'bang cymbals', 'blow horn' etc.

set_write_snd(string)

This command sets the string the player sees when he/she/it 
blows on the item. THIS COMMAND MUST BE SET WHEN USING THIS 
INHERITANCE!

set_say_snd(string)

This command sets the string the others in the room of the 
player see when the player uses the instrument. It will be 
prepended with the name of this player and a space. THIS 
COMMAND MUST BE SET WHEN USING THIS INHERITANCE!

set_short(string)

Default the short is set to the name, but capitalized (in 
standard case: Instrument). This can be changed by this 
command, if you want a more elegant short description of the
item.

set_long(string)

Default the long is the text 'You see nothing special.' or 
the read string, if one is present. With this command you 
can set it to a new description of the item.

set_read(string)

This command allows the player to read the instrument. The 
text will be displayed when he/she reads it.

set_read_file(string)

The string is the filename (+ path) of the file that must be
displayed when the player reads the instrument. This is not 
a very useful function, except for items with large texts on
them, which instruments usually AREN'T. Just implemented for
compatibility purposes...

set_alias(string)

With this command an alias can be included. This is a second
name to refer to the item. The alt_name is always set to 
instrument, there's nothing to be done about that, so 
alt_name is not implemented. If you want alt_name, then you 
can mail me, maybe I'll implement it after all if there are 
many requests...

set_info(string)

The info is a small hidden amount of text. It would be well
appreciated if this set command is always included in the 
generation of an instrument. I can't force you, but please, 
use it!

set_cpag(status)

This command will make the instrument can_put_and_get (or 
not), allowing things to be inserted upto the weight of the 
instrument. However, with things in it, the instrument will 
not produce a nice sound. I thought this would be 
interesting.

set_creator(string)

With this command you can set who made the instrument. This
is very useful, because Bards can check on who made the
item. If the creator is not set, the name of the wizard will
be used.

QUERY COMMANDS

There are several query commands implemented. They return 
the SET information. I'll not include a description, they 
all do what they say. More information can always be 
requested and I'd be happy to fill you in...

query_write_snd()
query_2nd_com()
query_say_snd()
query_value()
query_info()
query_weight()
query_creator()
