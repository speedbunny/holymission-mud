ON CALCULATING EXPERIENCE BASES.

given max_level, max_exp.

If you have <max_level> levels, you have to divide the <max_exp> into
<max_level - 1> parts.
This would result in a linear solution, which doesnt make sense at all.
More abstract is a non-linear solution:

experience(i) = max_exp * [ (1 / (max_level-1)) * (i-1)] ^ base.

Where base can be of any value.
Base being 1 leads to the linear solution again.
Values between 2 and 3 lead to good solutions.

Reverted formula:
In case you want a specific level have a specific value, you must calculate
the value for base.

       (1/(max_level-1)*(i-1))
base =                        log (experience(i)/max_exp)

Assume you want level 20 have 1.000.000 exp, given max_level and max_exp.

base = (1/29)(19) log (1.000.000 / 3.000.000) = log(1/3)/log(19/29) =
     = log(3)/log(29/19)
     = 2.598071396

Using this base, you will get a exp-level list where level 20 has 1.000.000 exp
and level 30 has 3.000.000.

The entire list looks like this:


ml = 3000000.000000 g =    2.5980713960 dl = 0.034483
[ 1] tl =       0
[ 2] tl =     476
[ 3] tl =    2883
[ 4] tl =    8266
[ 5] tl =   17454
[ 6] tl =   31166
[ 7] tl =   50049
[ 8] tl =   74702
[ 9] tl =  105682
[10] tl =  143515
[11] tl =  188703
[12] tl =  241724
[13] tl =  303038
[14] tl =  373088
[15] tl =  452303
[16] tl =  541098
[17] tl =  639877
[18] tl =  749033
[19] tl =  868949
[20] tl = 1000000
[21] tl = 1142551
[22] tl = 1296961
[23] tl = 1463581
[24] tl = 1642756
[25] tl = 1834823
[26] tl = 2040116
[27] tl = 2258960
[28] tl = 2491679
[29] tl = 2738588
[30] tl = 3000000

(This list was generated with the following program:)

#include <math.h>

#define NUMLVL	30

main(argc,argv)
int argc;
char *argv[];
{
double g,ml,dl,tl,xl;
int i;

  if (argc!=3) {
     printf("use: %s <max-exp> <grad>\n",argv[9]);
     exit(0);
  }

  dl = 1;
  dl /= (double)(NUMLVL-1); 
  ml = atof(argv[1]);
  tl = 0;
  g  = atof(argv[2]);
  printf("ml = %lf g = %15.10lf dl = %lf\n",ml,g,dl);
  for (i=0;i<NUMLVL;) {
      xl=pow(tl,g);
      printf("[%2d] tl = %7.0lf\n",++i,ml*xl);
      tl += dl;
  }
}
