/*
 * This is the guild master.
 * 
 * This object is not designed for cloning or inheriting.
 * Use it by calling the functions listed below.
 * You can assume that the object is loaded in room/init_file,
 * so don't load it yourself but refer to the funtions in a style like:
 *
 * value = "obj/guild_master"->query_function_value(params); 
 *
 * Refer to a specific guild only via the guildnumber.
 * The adventurers guild is number 0 by default. 
 *
 * It is needed that both, the guild room and the guild soul path name
 * are name according to the following conventions:
 *
 * guild_room: "/players/<responsive_wiz>/guild/guild.c"
 * guild_soul: "/players/<responsive_wiz>/guild/soul.c"
 *
 * If you want to establish your own guild, contact the adminstrators.
 * Your guild will be assigned a number, and all your guild's information
 * has to be stored in this file.
 *
 * These are the functions defined in the guild_master:
 * ===================================================
 * 
 * query_name		... returns the name of the guild 
 * query_soul		... returns the pathname to the guildsoul
 * query_room		... returns the pathname to the guildroom
 * query_wiz		... returns the name of responsible wiz
 * query_levels		... returns the number of levels in this guild
 * query_pretitle	... returns the pretitle for a level in a guild
 * query_title		... returns the title for a level in a guild
 * query_exp		... returns the base exp for a level in a guild
 *
 */

string gd_info;

void reset(int arg) {
  if (arg) return;	/* Allocate not needed anymore */
  gd_info = ({
    ({ "adventurer",	0		}),
    ({ "thief",		"herp"		}),
    ({ "mage",		0		}),
    ({ "fighter",	"capablanca"	}),
    ({ "jedi",		"kelly"		})
  });
}

string query_name(string gd) { return gd_info[gd][0]; }


