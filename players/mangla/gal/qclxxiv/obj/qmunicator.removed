// Mangla: modified to stop qmunications with shout curse.
/* Tatsuo : see line 62 */
inherit "/players/qclxxiv/qtool";

#define PNAME this_player()->query_name()
#define WNAME this_player()->query_real_name()
#define COST 30   /* shout and tell has to cost something */
#define FILENAME "players/qclxxiv/obj/qmunicator"	/* change if neccessary */
#define SHOUT(x) gTellstring=x; filter_array(users(),"filter_tell",this_object())
#define TP this_player()

static string gTellstring;
string say_string, tell_string, shout_string;
int echo;
 
filter_tell(ob) {
    if (ob == this_player()) return 0;
    return ob->catch_shout(gTellstring);
}
 

long()  { write("This Qmunicator allows you to qsay, qtell, qshout, Qsay,\n"
	+"Qtell, and Qshout things in the style of normal say, tell, and shout.\n"
	+"But using: set_qsay, set_qtell, and set_qshout, you can define your\n"
	+"own verbs: like after 'set_qsay whispers', 'qsay something' will result\n"
	+"in other people hearing: your_name whispers something.\n"
	+"qtell and qshout DO add ' you' or 'shouts' like usual though.\n"
	+"The Q versions do the same as q versions, only all text is uppercase:\n"
	+"i.e. Qtell hop bastard! makes hop hear: your_name tells you: BASTARD!\n"
	+"Currently the settings are\n"
	+"(qsay)  : "+say_string+"\n"
	+"(qtell) : "+tell_string+"\n"
	+"(qshout): "+shout_string+"\n"
	+"To get rid of the gadget: destroy qmunicator\n"
	+"To toggle visibility in your inventory: hide qmunicator\n"
	+"In honor of the first player to slaughter the Island Dragon, a command\n"
	+"to set echo of the qmunicator on and off has been added: qecho <on|off>.\n"
	+"\n"); }
get() { return 1; }
drop() { return 1; }
query_auto_load() { return FILENAME+":"+echo; }
query_weight() { return 0; }
query_value() { return 20; }

set_echo(str) {
	if (str=="on") echo=1;
	if (str=="off") echo=0;
	write( (echo) ? "echo on.\n" : "echo off.\n" );
	return 1;
}

reset(arg) {
	if (arg) return;
	set_name("qmunicator");
	set_short("A Qmunicator");
	set_qsay("eloquently as ever, says");
	set_qtell("eloquently as ever, tells");
	set_qshout("loud as ever,");	
}

init()  { 
	::init();
/* Tatsuo 030695: Removed from game by request of Mangla */
    
write("This object is removed from the game by Tatsuo by request of Mangla.\n");
write("Destructing Qmunicator.\n");
write("Your money has been refunded.\n");
this_player()->add_money(20);
destruct(this_object());
// Mangla: Tatsuo you need a return here.  ;)
    return;
	add_action("qsay", "qsay" );
	add_action("set_echo", "qecho" );
	add_action("qtell", "qtell" );
	add_action("qshout", "qshout" );
	add_action("QQsay", "Qsay" );
	add_action("QQtell", "Qtell" );
	add_action("QQshout", "Qshout" );
	add_action("set_qsay", "set_qsay" );
	add_action("set_qtell", "set_qtell" );
	add_action("set_qshout", "set_qshout" );
	add_action("dest", "destroy");
}

set_qsay(str) {
	say_string = str;	
	return 1;
}
set_qtell(str) {
	tell_string = str;	
	return 1;
}
set_qshout(str) {
	shout_string = str;	
	return 1;
}

uppercase(arg) {
	return call_other("/players/qclxxiv/string","upper_case",arg);
}

qsay(str) {
        if(present("shcurse",TP)) {
            write("You have been shout cursed. This is futile.\n");
            return 1;
        }
	say( PNAME+" "+say_string+": "+str+"\n", this_player() );
	if (echo)
		write("You "+say_string+": "+str+"\n");
	else write("Ok.\n");
	return 1;
}
QQsay(str) { return qsay(uppercase(str)); }

qtell(str) {
	string target, mssg;

        if(present("shcurse",TP)) {
            write("You have been shout cursed. This is futile.\n");
            return 1;
        }
	if (this_player()->query_spell_points()<(COST/3)) {
		write("You are too low on power.\n");
		return 1;
	}
	if (sscanf(str, "%s %s", target, mssg)==2) {
		if (find_player(target)) {	
                    if(find_player(target)->query_immortal()) {
                        tell_object(find_player(target),
                            WNAME+" "+tell_string+" you: "+mssg+"\n");
                    }
                    else {
			tell_object( find_player(target),
					PNAME+" "+tell_string+" you: "+mssg+"\n");
                        this_player()->restore_spell_points(-COST/3);
                    }
			if (echo)
				write("You "+tell_string+" "+target+": "+mssg+"\n");
			else write("Ok.\n");
		}
		else write("Can't find any mortal with that name.\n");
		return 1;
	}
	write( "Tell whom what?\n");
	return 0;
}
QQtell(str) {
	string target, mssg;

        if(present("shcurse",TP)) {
            write("You have been shout cursed. This is futile.\n");
            return 1;
        }
	if (this_player()->query_spell_points()<(COST/3)) {
		write("You are too low on power.\n");
		return 1;
	}
	if (sscanf(str, "%s %s", target, mssg)==2) {
		if (find_player(target)) {	
			mssg = uppercase(mssg);
                    if(find_player(target)->query_immortal()) {
                        tell_object( find_player(target),
                            WNAME+" "+tell_string+" you: "+mssg+"\n");
                    }
                    else {
                        tell_object( find_player(target),
						PNAME+" "+tell_string+" you: "+mssg+"\n");
                        	this_player()->restore_spell_points(-(COST/3));
                    }
			if (echo)
				write("You "+tell_string+" "+target+": "+mssg+"\n");
			else write("Ok.\n");
		}
		else write("Can't find any mortal with that name.\n");
		return 1;
	}
	write( "Tell whom what?\n");
	return 0;
}

qshout(str) 
{
        if(present("shcurse",TP)) {
            write("You have been shout cursed. This is futile.\n");
            return 1;
        }
  // sorry .. little change: whisky (prooving the spellcosts) 
   if (this_player()->query_sp() < COST)
      write("Your throat is to dry, you have to wait a bit.\n");
   else
   {
	   SHOUT( PNAME+" "+shout_string+" shouts: "+str+"\n" );
	   write( PNAME+" "+shout_string+" shouts: "+str+"\n" );
	   this_player()->restore_spell_points(-(COST));
   }
	return 1;
}
QQshout(str) { return qshout(uppercase(str)); }

dest(arg) {
	if (arg=="qmunicator") {
		destruct(this_object());
		return 1;
	}
	return 0;
}

init_arg(arg) {
    if (!arg) return;
	echo = arg;
}

