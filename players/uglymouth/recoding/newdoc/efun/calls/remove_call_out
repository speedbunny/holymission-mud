EFUN: remove_call_out

SYNTAX:
int remove_call_out( fun );
  string fun;

DESCRIPTION:
This removes next pending call_out for function 'fun' in the current
object, if any.

RETURN VALUE:
If there was no call_out pending to this function -1 is returned.
Otherwise the delay time that was left, is returned.

SEE ALSO:
call_out
find_call_out
call_out_info

EXAMPLE:
int do_dispell( string spell ) {
  int i;

  if( spell != "delayed blast fireball" ) return 0;
  i = remove_call_out( "trigger_blast" );
  if( i == -1 ) {
    notify_fail( "Your waste your power on a non-existent threat.\n" );
    return 0;
  }
  if( i < 3 ) {
    write( "You feel that you have escaped death, but only just!\n" );
    return 1;
  }
  write( "You dispell the pending threat well in time.\n" );
  return 1;
}
// This gives delay time dependent messages for dispelling.
