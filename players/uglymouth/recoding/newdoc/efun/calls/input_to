EFUN: input_to

SYNTAX:
int input_to( fun[, echo_flag] );
  string fun;
  int echo_flag;

DESCRIPTION:
This enables the next line of user input to be sent as an argument to
the local function 'fun' in the current object. The input line will
not be parsed.

NOTES:
1) 'fun' is not called immediately. It will not be called until
the current execution has terminated, and the player has given a new
command.
2) If input_to is called more than once in the same execution
(regardless of the function specified), only the first call has any
effect.
3) If optional argument 'echo_flag' is non-zero, the line given by the
player will not be echoed (printed to screen), and is not seen if snooped.

RETURN VALUE:
The first time input_to is called, it returns 1. Any further calls
will return 0. Not that you will use this much...

SEE ALSO:
call_other()
sscanf().

EXAMPLE:
void logon() {
  write( "Please enter your name: " );
  input_to( "get_name" );
}

void get_name( string user_name ) {
  if( !player_exists( user_name ) ) {
    write( "New character!\n" );
    return;
  }
  restore_object( "/player_save_dir/" + user_name + ".o" );
}
// The name the player enters is passed as 'user_name' to the
// function 'get_name', as specified by the input_to efun.
// Note that 'get_name' will not be executed until 'logon' has
// been finished and the player has entered his name.
