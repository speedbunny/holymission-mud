SET&QUERY - chest.c

Usual defined LFUN's:
set_weight(i), set_value(i), set_name(s), set_alt_name(s), set_alias(s),
set_short(s), set_long(s), set_read(s), query_weight(),query_value().

set_max_weight(i): This sets the maximum weight the container can carry.
                   Example: set_max_weight(6);
set_closed(i): With this function the container can be closed. The value of
               i is a dummy, it does not do anything special (according to me
               at least).
               Example: set_closed(1);
set_opened(): With this function a container can be defined as opened, allowing
              things to be put in and retrieved from it.
set_lid_name(s): This defines the name of the lid, in name format (no 
                 capitals).
                 Example: set_lid_name("lid");
set_can_get(i): i can be 0 (the object can not be taken) or 1 (it can be
                taken). This is useful for very heavy chests ect.
                Example: set_can_get(0);
set_can_close(i): i can be 0 (the container can't be opened or closed)
                  or 1 (it can be).
                  Example: set_can_close(1);
set_of_glass(i): This makes a container of_glass, i.e. one can see
                 the contents even when it's closed.
                 This also will make light caused by lighting armours
                 visible outside the container.
                 Example: set_of_glass(1);
set_only_for(s): This function makes the container a container for only
                 one kind of object. If anything other than an object with
                 's' as name is tried to be put into the container, it
                 won't work. This can be disabled by making 's' equal to
                 0. Example:
                 set_only_for("match");
query_only_for(): This returns the 's' set by set_only_for(s) (see above).
                  This function should NOT be removed, since it's actually
                  USED somewhere!
query_of_glass(): This checks if a container is of_glass.
query_container(): Returns 1.
query_max_weight(): Returns the maximal weight of the container.
