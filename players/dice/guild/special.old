#ifndef __specials__
#define __specials__

int camou_block;
int camou_left;

/* ----- invis ------------------------------------------------------------ */
_camouflage( arg )
{
   if ( arg )
      return;
      
   if ( TP->query_ghost() ) {
      write( "You cannot camouflage yourself as a ghost.\n" );
      return( 1 );
   }
   if ( TP->query_invis() ) {
      write( "You are already camouflaged.\n" );
      return( 1 );
   }

   if ( camou_block ) {
      write( "You have to wait a while, until you can try to camouflage yourself again.\n" );
      return( 1 );
   }
   
   if ( random(120) < actCamouSkill ) {
      TP->set_invis(TP->query_level()-1); /*to make it fit to other guilds*/
      camou_block = 1;
      camou_left = actCamouSkill + 10;
      write( "You are one with your environment now.\n" );
      advance_skill( TP, CAMOU_SKILL, 1, 100 );
   }
   else {
      write( "Your attempt to camouflage yourself is unsuccessful.\n" );
      call_out( "rm_camoublock", (100 - actCamouSkill) * 2 + 120 );
      camou_block = 1;
      advance_skill( TP, CAMOU_SKILL, 1, 20 );
   }
   
   return( 1 );
}

_reveal( )
{
   if ( !(TP->query_invis()) ) {
      write( "You ain't camouflaged, dude.\n" );
      return( 1 );
   }

   write( "You remove your camouflage.\n" );
   rm_invis();
   return( 1 );
}

rm_invis( )
{
   if ( TP->query_invis() )
      TP->set_vis();
   call_out( "rm_camoublock", (100 - actCamouSkill) * 2 + 120 );
   camou_block = 1;
   camou_left = 0;
}

rm_camoublock( )
{
   camou_block = 0;
}

query_iscamou()
{
   if ( camou_left )
      return( camou_left );

   return( environment(this_object())->query_invis() || camou_left );
}

dec_camou()
{
   camou_left -= 2;
   if ( camou_left <= 0 ) {
      rm_invis();
      camou_left = 0;
   }
}

check_camou()
{
   if ( camou_left < 1 )
      return( "You ain't camouflaged at all!" );
   else if ( camou_left < 10 )
      return( "You're camouflage is very, very poor." );
   else if ( camou_left < 20 )
      return( "You're camouflage is very poor." );
   else if ( camou_left < 30 )
      return( "You're camouflage is bad." );
   else if ( camou_left < 40 )
      return( "You're camouflage is not bad." );
   else if ( camou_left < 50 )
      return( "You're camouflage is good." );
   else if ( camou_left < 60 )
      return( "You're camouflage is excellent." );
   else if ( camou_left < 70 )
      return( "You're camouflage is superior." );
   else
      return( "You're one with your environment!" );
}


/* --- assassinate ------------------------------------------------------- */
_assassinate( arg )
{
   int    failed, rando, damage, chance;
   object *who;
  
   failed = 0;
   
   if ( !arg ) {
      write( "Assassinate who?\n" );
      return( 1 );
   }
   
   who = present( arg, environment( TP ) );
   if ( !who || !living(who) || who->query_ghost() ) {
      write( "You only can assassinate somebody, who you can see and who is alive.\n" );
      return( 1 );
   }
   
   if ( !(TP->query_invis()) ) {
      write("Bad timing!!! You are not camouflaged, this might end bad !!!\n" );
      failed = 1;
   }

   if ( who->query_attack(this_player()) == this_player() ) {
      write( "You try to assassinate " + capitalize(who->query_name()) +
             ", but " + who->query_pronoun() + " reminds your\n"+
             "last assassinate, so you fail !!!\n" );
      failed = 1;
   }
      
   if ( (TP->query_attack() && present(TP->query_attack(),environment(TP))) ) {
      write( "Assassinate while fighting!? Strange attempt.\n" );
      failed = 1;
   }
   
   if ( query_to_heavy() ) {
      write( "You feel to heavy to assassinate somebody.\n" );
      failed = 1;
   }

   if ( check_armour() ) {
      write( "Your unusual armour hinders you to assassinate somebody.\n" );
      failed = 1;
   }

   if ( failed ) {
   write("Because of your try to assassinate your enemy, you don't manage to\n"+
         "protect yourself and run unprotected into the enemy attack !!!\n" );
      TP->hit_player( TP->query_max_hp()/10,5 ); //## type 5 sourcer
      who->attack_object( TP );
      return( 1 );
   }

   if ( query_fullattack() ) {
      write( "You're in a fullattack, you are much too busy to do this !!!\n" );
      return( 1 );
   }
      
   if ( random(who->query_level()*3/2) < actAssassSkill ) {
      if ( who->query_level() < ALL_STAT_AV )
         advance_skill( TP, ASSASS_SKILL, 1, 100 );
      else
         advance_skill( TP, ASSASS_SKILL, 1, 50 );
      
      rando = random( 100 );
      if ( TP->query_level()*2 > who->query_level() )
         chance = (TP->query_level()*2 - who->query_level()) / 3;
      else
         chance = 10;
      if ( (who->query_level() < ALL_STAT_AV/2) || rando < chance ) {
         write("You move behind your opponent and ASSASSINATE this creep!!!\n");
         tell_object( who, "Someone assassinated you !!!\n" );
         damage = TP->query_dex() * (5+random(3));
         TP->add_exp( damage );
        who->attack_object(TP);
         rm_invis();			// #### type 5   *sourcer* ####
        who->hit_player(damage,5);   /* Dice to avoid bug message */
         return( 1 );
      }
   }

   advance_skill( TP, ASSASS_SKILL, 1, 20 );
   write( "You try to assassinate your enemy, but in the last second " +
           who->query_pronoun() + " recognizes you and can avoid the hit.\n"); 
   tell_object( who, capitalize( TP->query_real_name() ) +
         " tried to assassinate you.\nBut you recognize the attempt and " +
         "can avoid the hit.\n" );

   who->attack_object( TP );
   rm_invis();
   return( 1 );
}


#endif /*__specials__*/
