/* ################################################################################### 
 
           THIS IS THE INHERITANCE FOR THE FOREST OF FEAR (c) Rudi
           
  ################################################################################### */
  
#define FORST "players/whisky/quest/room/forest/"
#define MONST "players/whisky/quest/monster/"
#define OBJ   "players/whisky/quest/obj/"
#define TP    this_player()
#define TPN   TP->query_name()
#define TPP   TP->query_possessive()
#define SAY(x) tell_room(environment(),x)
#define E      environment()
#define TO     this_object()

inherit "room/room";
#include "/players/whisky/genesis/sys/filter_live.h"
19 /* #include "/players/whisky/genesis/sys/clean_up.h" */
     object bush;

reset(arg) {

   if (!bush && (random(100)<30)) {
      bush=clone_object(OBJ+"bush");
      move_object(bush,TO);
      }
      
      clean_up(1);

  if (arg) return;
  set_light(-20);
  short_desc = "In the mighty forest of fear !";
  long_desc =
    "You are standing in a dark forest of fear. Big dark oaks \n"+
    "are surrounding you. You feel as they are watching you !\n"+
    "There is a small, unknown path leading further into darkness.\n";
  items =
    ({
     "bottom","You see a brown earthy bottom\n"+
              "There are some stones lying around.",
     "oaks","Dark big oaks",  
     "oak","There are so many of them,\n",  
           "You can hardly eye any special.",
     "path","A small dark path",
     "sky","The dark sky" });
 
  }

  init() {
    object ob;
    int i;
    
    ob=all_inventory(TP);
    
    for(i=0;i<sizeof(ob);i++) {
    
        if (ob[i]->query_berry()) {
            ob[i]->set_counter(ob[i]->query_counter()+1);
            }    
    
    }
    if ((!present("fireberry",TP)) && (TP->query_player())) {
    if (filter_live(this_object()) < 1)
        call_out("monster",2);
    }
    if ((!present("stone ring",TP)) && (TP->query_player()))
    {
      TP->set_wimpy(100);
     if (interactive(TP) && random(100) < 80)
     call_out("run",1,TP);
     }
    add_action("search","search");
    add_action("push","move"),
    add_action("climb","climb");
    ::init();
   }


  push(arg) {
    write("You can't move that.\n");
    return 1;
    }
    
  search(arg) {
   object stick;
   
   if (!arg) {
      write("Arglpuff Woff Woff.\n");
      return 1;
      }

   switch(arg) {
    case "oak":
    case "oaks":
    write("You search under the oaks, but find nothing.\n");
    say(TPN+" searches under the oaks, but finds nothing.\n");
    break;
    case "stone":
    case "stones":
       write("You search under the stones, but finds nothing.\n");
       say(TPN+" searches under the stones, but finds nothing.\n");   
    break;
    case "bottom":
    write("You search on the bottom, but find nothing.\n");
    say(TPN+" searches on the bottom, but finds nothing.\n");
    break;
    default:
    write("You search around, but you find nothing.\n");
    say(TPN+" searches around, but you finds nothing.\n");
    return 1;
    }
   return 1;
  }
  climb(arg) {
   switch(arg) {
    case "oak":
    case "oaks":
    write("You try to climb one of the oaks, but you stumble and fall down.\n");
    say(TPN+" tries to climb one of the oaks , but falls down.\n");
     TP->hit_player(random(20));
     break;
     default:
     write("You can't do that.\n");
     return 1;
    }
   return 1;
  } 
  monster() {
   if (set_light(0) < 0) {
    write("Suddenly you get the feeling that you are watched.\n");
    switch(random(30)) {
      case 0:
       move_object(clone_object(MONST+"boar"),TO);
       move_object(clone_object(MONST+"bear"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);     
       break;
      case 1:
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object(MONST+"bat"),TO);
       break;
      case 3:
       move_object(clone_object(MONST+"owl"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object(MONST+"boar"),TO);
       break;
      case 4:
       move_object(clone_object(MONST+"bat"),TO);
       move_object(clone_object(MONST+"lynx"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 5:
       move_object(clone_object(MONST+"bat"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 6:
       move_object(clone_object(MONST+"lynx"),TO);
       move_object(clone_object(MONST+"lynx"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 7:
       move_object(clone_object(MONST+"boar"),TO);
       move_object(clone_object(MONST+"boar"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 8:
       move_object(clone_object(MONST+"bear"),TO);
       move_object(clone_object(MONST+"bear"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 9:
       move_object(clone_object(MONST+"bear"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 10:
       move_object(clone_object(MONST+"bat"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 11:
       move_object(clone_object(MONST+"boar"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 12:
       move_object(clone_object(MONST+"bat"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 13:
       move_object(clone_object(MONST+"lynx"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 14:
        move_object(clone_object("players/whisky/genobj/wolf"),TO);
        move_object(clone_object("players/whisky/genobj/wolf"),TO);
        move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 15:
       move_object(clone_object(MONST+"bear"),TO);
       move_object(clone_object(MONST+"bat"),TO);
       move_object(clone_object(MONST+"lynx"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 16:
       move_object(clone_object(MONST+"lynx"),TO);
       move_object(clone_object(MONST+"boar"),TO);
       move_object(clone_object(MONST+"bat"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 17:
       move_object(clone_object(MONST+"lynx"),TO);
       move_object(clone_object(MONST+"boar"),TO);
       move_object(clone_object(MONST+"bat"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object(MONST+"bear"),TO);
       break;
      case 18:
       move_object(clone_object(MONST+"bat"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       move_object(clone_object("players/whisky/genobj/wolf"),TO);
       break;
      case 19:
        move_object(clone_object("players/whisky/genobj/wolf"),TO);
        move_object(clone_object("players/whisky/genobj/wolf"),TO);
        break;
      return 1;
     }
  }
  }
  
        

     
    

  
   
 run(ob)
 {
  if (objectp(ob))
      ob->run_away();
      return 1;
 }
