
 Hello, this is from Ergberg.

 It is a list of all efuns of the lpmud gamedriver (full 3.0 mode)
 An argument can have two different types with the syntax 'type1 | type2'.
 An argument is marked as optional if it also takes the type 'void'.

 Some of these efuns, like add_action(), should no longer be used
 directly. Use the new lfuns instead! 

  L : use lfuns from the lib instead.
  l : wait for a lfun in the lib, don't use this efun.
  O : obsolete, don't use this!
  S : system, don't use them at all, most won't work for non system
      objects, some, like break_point(), will simply crash the game.

L void add_action(string function, void|string verb, void|int flag);
O void add_verb(string verb);
S void add_worth(int value, void|object wizard);
l void add_xverb(string verb);
  object *all_inventory(object default: F_THIS_OBJECT);
  mixed *allocate(int entries);
  mixed assoc(mixed key, mixed *keys, mixed|void data_or_fail,mixed|void fail);
S void break_point();
  unknown call_other(object|string object, string function, ... parameters);
  void call_out(string function, int seconds, void|mixed parameter);
  mixed *call_out_info();
  string capitalize(string);
  int cat(string file, void|int start line, void|int num);
  int cindent(string filename);
  string clear_bit(string bits, int num);
  object clone_object(string filename);
  int command(string input);
S string create_wizard(string name , void|string domain);
  string crypt(string str, string|int seed);/* An int as second argument ? */
  string ctime(int time);
  mixed debug_info(int null, object ob); [was (int, mixed|void, ...)];
  object *deep_inventory(object);
L void destruct(object ob);
  void disable_commands();
  void ed(void|string filename, string function);
  void enable_commands();
  object environment(void|object ob);
S int exec(object new, object old);
  string *explode(string str, string delimiter);
  int export_uid(object ob);
  string extract(string str, void|int from, void|int to);
  string file_name(object default: F_THIS_OBJECT);
  int file_size(string filename);
  mixed *filter_array(mixed *arr,string func,object|string ob,void|mixed parm);
  int find_call_out(string function);
  object find_living(string name);
  object find_object(string fiel_name);
  object find_player(string name);
  object first_inventory(object|string default: F_THIS_OBJECT);
  string function_exists(string function, object default: F_THIS_OBJECT);
  string geteuid(object default: F_THIS_OBJECT);
  string getuid(object default: F_THIS_OBJECT);
  string implode(string *array, string delimiter);
  void input_to(string function, void|int echo_off);
  mixed insert_alist(mixed key, mixed data_or_key_list, ...);
  int interactive(object default: F_THIS_OBJECT);
  mixed *intersect_alist(mixed *list1, mixed *list2);
  int intp(mixed test);
  int living(object ob);
  void localcmd();
  void log_file(string file, string text);
  string lower_case(string str);
  string *get_dir(string dirpath);
  mixed *map_array(mixed *array, string fun,object|string ob,void|mixed param);
  int member_array(mixed item, mixed *array);
  int mkdir(string dirpath);
L void move_object(object|string onject, object|string destination);
  object next_inventory(object default: F_THIS_OBJECT);
L void notify_fail(string failtext);
  int objectp(mixed test);
  mixed *order_alist(mixed *keys, void|mixed *data, ...);
  int pointerp(mixed test);
  object present(object|string str, void|object obj);
  object previous_object();
  string process_string(string str);
  string query_host_name();
  int query_idle(object);
  string query_ip_name(void|object ob);
  string query_ip_number(void|object ob);
  string query_load_average();
  object query_snoop(object ob);
  string query_verb();
  int random(int max);
  string read_bytes(string filename, void|int startpos, void|int numbytes);
  string read_file(string filename, void|int startline, void|int numlines);
  int remove_call_out(string function);
  int rename(string oldfilename, string newfilename);
  int restore_object(string filename);
  int rm(string filename);
  void rmdir(string dirpath);
  void save_object(string filename);
L void say(string text, void|object avoid);
  string set_bit(string bits, int pos);
  int set_heart_beat(int flag);
L int set_light(int value);
  void set_living_name(string name);
  int seteuid(string|int name_or_null);
  object shadow(object ob, int flag);
L void shout(string text);
S void shutdown();
  int sizeof(mixed *array);
  object snoop(void|object snooper, void|object snoopee);
  mixed *sort_array(mixed *array,string greater_func,
		    object|string default: F_THIS_OBJECT);
  int stringp(mixed test);
  int strlen(string str);
S void swap(object ob);		/* Only used for debugging */
  void tail(string file);
L void tell_object(object destination, string text);
L void tell_room(object|string, string, void|object *);
  int test_bit(string bits, int pos);
  object this_object();
  object this_player(void|int flag);
S void throw(mixed);
  int time();
S int trace(int level);
S string traceprefix(string|int prefix);
  mixed *unique_array(mixed *obarray, string seperator, void|mixed ???);
  object *users();
  string version();
S void wizlist(void|string name);
L void write(mixed text);
  int write_bytes(string file, int num, string text);
  int write_file(string file, string text);
  

nolonger available are: creator() and transfer()!

