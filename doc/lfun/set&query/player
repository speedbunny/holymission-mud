SET&QUERY - player.c

set_user_status(i): This makes bit 'i' of the status register 1. Only use this
                    if you know what you are doing. See also /obj/user_status.h
                    Example: this_player()->set_user_status(CASHIMOR);
set_description(s): This sets the description of the character. This is
                    displayed when one looks at the character. For wizards it
                    is more appropriate to add an item that has an extra_look
                    function defined, since this description can be changed
                    by the player too. 
                    Example: this_player()->set_description("looks great");
set_level(i): This sets the level of the player. There are certain restrictions
              to this function, and it is not advisable to call it from your
              own programmes.
              Example: this_player()->set_level(5);
set_title(s): This sets the title of the player. This is reset by the
              guild/master, so when you set this it will change back soon.
              Example: this_player()->set_title("the stupid");
set_pretitle(s): This sets the pretitle of the player. This will, just like
                 set_title(s), be reset often by guild/master.
                 Example: this_player()->set_pretitle("noble");
set_start_pos(s): This sets the place the player will get the next time he/she
                  logs in. If no parameter is given, the current place is
                  returned. 's' has to be a file name of an existing location.
                  If used to trap players, please make sure there are ways to
                  get out of the trap.
                  Example: this_player()->set_start_pos("room/post");
set_friend(): This makes a player a testplayer, if he/she has no XP and some
              other constrictions. Don't use this in your programmes.
set_al(i): This sets the alignment of the character to i. This is not the
           best way to do this: better is add_alignment(i) to modify it.
           Example: this_player()->set_al(100);
set_mailaddr(s): This sets the Email address of a player to a specific address.
                 This is changable by the player, so please don't use this
                 function, unless necessary.
                 Example: 
                 this_player()->set_mailaddr("maarten@einstein.et.tudelft.nl");
set_quest(s): This marks the quest with the name s as done by the player.
              Don't use this on quests made by someone else.
              Example: this_player()->set_quest("apple_double");
set_invis(): This can't be called from outside this object. This makes the
             player invisible.
set_vis(): This can't be called from outside this object. This makes the
           player visible.
set_guild(i): This sets the guild to i. The list of guilds can be gained from
              guild/master by going to guild/master and typing 'dump'. This
              function also removes the old guildsoul, and adds a new one.
              It also changes the pretitle, title, hits and spellpoints, and
              recalculates the quest_points.
set_cap_name(): This generates an internal variable cap_name, to be used for
                write instructions.
query_real_name(): This returns the real name of the player, without capitals.
                   This name can not be changed.
query_path(): This returns the path the wizard is working in. Has no real
              function, I guess, unless you are writing diskutilities.
query_prevent_shadow(): This returns 1: it is not allowed to program shadows
                        for players.
query_linkdeath(): This returns 0 if the player is active, otherwise something
                   else (if he/she is linkdead).
query_sponsor(): This returns the name of the wizard sponsering this wizard.
query_earmuff_level(): This returns which level shouts will not be heard by
                       this player.
query_invis(): This returns 0 if the player isn't invisible, 1 if he/she is.
query_guild(): This returns the number of the guild the player is in.
query_wizline(): This is 0 if the player doesn't listen to the wizline, and 1
                 if he/she does listen.
query_quest_points(): This returns the number of questpoints the player has
                      got.
query_brief(): This returns 1 if the player is using brief mode, otherwise it
               returns 0.
query_intoxination(): This returns the amount of alcohol in someones body.
query_stuffed(): This returns the amount of food in someones stomach.
query_soaked(): This returns the amount of liquid in someones body.
query_poisoned(): The returns the level of poisoning of the player.
query_quests(s): When there is no 's' then this function returns a string with
                 all questnames in it seperated by #'s. Otherwise the programme
                 checks if the quest 's' is done by the player, and returns 0
                 if not and something else if.
query_mailaddr(): This returns the Email address, if the character has one. If
                  the character does not have one, 'none' is returned.
query_alignment_title(): This returns the REAL title of the alignment, ranging
                         from demonic to saintly.
query_player(): This returns 1.
query_testchar(): This returns the name of the wizard of which this is a
                  testcharacter. It can be used to check if it is a 
                  testcharacter.
query_title(): This returns the title of the player.
query_pretitle(): This returns the pretitle of the player.
query_user_status(i): Gives 0 if bit 'i' in the status register is not set,
                      and 2^i if it is.
query_msgin(): This returns the string that is displayed if the player enters
               an area.
query_msgout(): This returns the string that is displayed if the player leaves
                an area. After this message the direction is mentioned.
query_mmsgin(): This returns the string that is displayed if th player
                teleports to an area.
query_mmsgout(): This returns the string that is displayed if the player
                 teleports from an area.
query_link_return(): This returns the value of link_return. I don't know what
                     it means.


